<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>